<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>